<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>